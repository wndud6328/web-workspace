## 서블릿 생명주기(Life Cycle)

- 서블릿 객체가 생성 후 소멸되기까지의 과정을 라이프 사이클이라고 한다.

1. 첫번째 요청일 경우, 서블릿 객체를 생성하고 init() 메소드를 호출한다.
   (단, 한번만 수행!)
2. service() 메소드가 클라이언트 요청 방식에 따라 doGet(), doPost() 메소드를 호출한다.
3. 최종적으로 서블릿이 서비스 되지 않았을 때 destroy() 메소드를 호출한다.

# JSP(Jave Server Page)

- HTML 코드 안에서 스크립트 형태로 자바 언어를 사용하여 동적인 페이지를 구현한다.
- JSP의 목표는 서블릿의 비즈니스 로직으로부터 화면 로직을 분리하는 것을 목표로 한다.

### Servlet과 JSP의 차이

- Servlet : Java 코드에 HTML 코드 삽입, 비즈니스 로직 처리에 적합
- JSP : HTML 코드에 Java코드 삽입, 화면 로직 처리에 적합

## JSP 실행 과정

- 웹 컨테이너는 클라이언트로부터의 요청이 JSP에 대한 요청일 경우 먼저 JSP 파일을 자바 코드(서블릿)로 변환한다.
- 변환된 자바 코드(서블릿)를 컴파일하고 서블릿 인스턴스를 생성한다.
- 서블릿 인스턴스가 생성되면 서블릿의 라이프 사이클을 거치면서 클라이언트의 요청을 처리해준다.

## JSP의 특징

- 자바 언어를 이용하기 때문에 대부분의 운영체제에서 사용이 가능하다.
- 서버 자원을 효율적으로 사용한다. (요청을 스레드 단위로 처리)
- MVC 패턴을 쉽게 적용할 수 있다.
- JSP 파일의 배포 위치는 HTML 파일과 동일하다.
